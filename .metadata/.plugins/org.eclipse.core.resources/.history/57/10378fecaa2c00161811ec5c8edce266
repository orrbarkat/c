/*
 * SPPoint.c
 *
 *  Created on: May 28, 2016
 *      Author: user
 */

#include "SPPoint.h"
#include <assert.h>
#include <stdlib.h>

struct sp_point_t{
	int index;
	double* data;
	int dim;
};

SPPoint spPointCreate(double* data, int dim, int index){
	assert((dim > 0) && data && (index >= 0));

	struct sp_point_t *point = (struct sp_point_t*) malloc(sizeof(struct sp_point_t));

	point->data = (double*) calloc(dim, sizeof(double));

	if (point == NULL) {
		return NULL;
	}
	point->dim = dim;
	point->index = index;

	for ( int i = 0; i < dim; i++) {
		(point->data)[i] = data[i];
	}

	return point;
}


SPPoint spPointCopy(SPPoint source){
	assert(source);
	SPPoint res;
	res = spPointCreate(source->data, source->dim, source->index);
	return res;
}


void spPointDestroy(SPPoint point){
	free(point->data);
	free(point);
}


int spPointGetDimension(SPPoint point){
	assert(point);
	return point->dim;
}


int spPointGetIndex(SPPoint point){
	assert(point);
	return point->index;
}


double spPointGetAxisCoor(SPPoint point, int axis){
	assert(point);
	assert(axis>=0 && axis<point->dim);
	return point->data[axis];
}


double spPointL2SquaredDistance(SPPoint p, SPPoint q){
	assert(p && q && (p->dim ==q->dim));
	double res = 0.0;
	for (int i = 0; i<p->dim; i++){
		res += (p->data[i]-q->data[i])*(p->data[i]-q->data[i]);
	}
	return res;
}


